version: "3.1"

services:
  facades_db:
    container_name: facades_db
    image: postgis/postgis:14-3.3
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    env_file: db.env
    restart: unless-stopped
    networks:
      - facades

  facades_classifier:
    container_name: facades_classifier
    build: ./classifier
    image: 'facades_classifier:latest'
    env_file: ./classifier/.env
    restart: unless-stopped
    networks:
      - facades

  facades_backend:
    container_name: facades_backend
    build: ./backend
    image: 'facades_backend:latest'
    env_file: ./backend/.env
    environment:
      - PHOTOS_DIRECTORY=/photos
    volumes:
      - ./photos:/photos
    depends_on:
      - facades_db
      - facades_classifier
    restart: unless-stopped
    networks:
      - facades

  facades_nginx:
    container_name: facades_nginx
    build:
      context: hosting
      dockerfile: nginx-http-only.Dockerfile
      args:
        BACKEND_ADDRESS: ${BACKEND_ADDRESS}
    image: 'facades_nginx:latest'
    env_file:
      .env
    volumes:
      - hosting_ssl:/ssl
    depends_on:
      - facades_backend
    restart: unless-stopped
    networks:
      - facades
      - hosting_net

  facades_certificate_updater:
    container_name: facades_certificate_updater
    build:
      context: hosting
      dockerfile: certbot.Dockerfile
      args:
        EMAIL: ${EMAIL}
        DOMAIN: ${DOMAIN}
    image: 'facades_cetrificates_updater:latest'
    volumes:
      - hosting_ssl:/ssl
      - hosting_letsencrypt:/etc/letsencrypt
    depends_on:
      - facades_nginx
    restart: unless-stopped
    networks:
      - facades

networks:
  facades:
  hosting_net:
    external: true

volumes:
  hosting_ssl:
    external: true
  hosting_letsencrypt:
    external: true
